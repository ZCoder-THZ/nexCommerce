// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
   url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
model Category {
  id        Int         @id @default(autoincrement())
  name      String
  iconUrl   String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  products  Product[]   // One-to-many relation with Product model
}

// Define model for products
model Product {
  id            Int         @id @default(autoincrement())
  name          String
  description   String?
  price         Float
  imageUrl      String?
  categoryId    Int
  category      Category    @relation(fields: [categoryId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  inventory     Int         @default(0)

  // Define relation for multiple images of a product
  images        ProductImage[]
}

// Define model for product images
model ProductImage {
  id          Int         @id @default(autoincrement())
  productId   Int
  url         String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Define relation to Product model
  product     Product     @relation(fields: [productId], references: [id])
}